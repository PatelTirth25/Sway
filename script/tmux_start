#!/bin/sh

# Directory containing all projects
BASE_DIR="/home/tirth/code"

# Get list of directories and let user choose
echo "Available projects:"
# Using find to list only directories, excluding hidden ones
projects=$(find "$BASE_DIR" -maxdepth 1 -type d ! -name ".*" ! -path "$BASE_DIR")
i=1
for project in $projects; do
    echo "$i) $(basename "$project")"
    i=$((i + 1))
done

# Get user input
echo -n "Enter the number of the project to open: "
read -r choice

# Validate input and get the selected project
i=1
selected_project=""
for project in $projects; do
    if [ "$i" -eq "$choice" ]; then
        selected_project="$project"
        break
    fi
    i=$((i + 1))
done

if [ -z "$selected_project" ]; then
    echo "Invalid selection"
    exit 1
fi

# Session name (using project name as session name)
SESSION_NAME="$(basename "$selected_project")"
tmux kill-session -t "$SESSION_NAME"

# Start a new tmux session with a temporary window
tmux new-session -d -s "$SESSION_NAME"

# Check if there are any non-dot files in the directory
if find "$selected_project" -maxdepth 1 -type f ! -name ".*" | read -r; then
    # If there's even a single non-dot file, open the entire directory in nvim
    tmux new-window -t "$SESSION_NAME" -n "editor" "cd $selected_project && nvim $selected_project"
else
    # If all items are folders, first create all nvim windows
    for folder in "$selected_project"/*/; do
        window_name="$(basename "$folder")"
        tmux new-window -t "$SESSION_NAME" -n "$window_name" "cd $folder && nvim $folder"
    done
fi

# Now create all terminal windows
if find "$selected_project" -maxdepth 1 -type f ! -name ".*" | read -r; then
    # Create a terminal window for the main directory
    tmux new-window -t "$SESSION_NAME" -n "View_editor" "cd $selected_project && zsh"
else
    # Create terminal windows for each directory
    for folder in "$selected_project"/*/; do
        window_name="$(basename "$folder")"
        tmux new-window -t "$SESSION_NAME" -n "View_$window_name" "cd $folder && zsh"
    done
fi

# Kill the first temporary window
tmux kill-window -t "$SESSION_NAME":0

# Select the first window
tmux select-window -t "$SESSION_NAME":1

# Attach to the tmux session
tmux attach-session -t "$SESSION_NAME"
